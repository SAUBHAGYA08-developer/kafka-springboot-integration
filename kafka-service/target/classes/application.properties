spring.application.name=kafka-service
server.port=9098

# Producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.retries=10
spring.kafka.producer.retry.backoff.ms=1000
spring.kafka.producer.acks=all
spring.kafka.producer.linger.ms=1
spring.kafka.producer.batch.size=16384
spring.kafka.producer.buffer.memory=33554432


# Consumer configuration
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringSerializer

#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.group-id=item_available_group
#spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.session.timeout.ms=15000
spring.kafka.consumer.request.timeout.ms=30000


# General Kafka properties for higher availability
spring.kafka.properties.session.timeout.ms=45000

# Kafka topic configuration
kafka.topic.partitions=1
kafka.topic.replication-factor=1

# Enable topic deletion
delete.topic.enable=true

spring.cloud.stream.kafka.binder.default.consumer.auto-offset-reset=latest
